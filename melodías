//http://conquest.imslp.info/files/imglnks/usimg/c/c7/IMSLP338600-PMLP546394-JohannSebastianBach_DieKunstDerFuge_arr4guitars_SerbanNichifor2006_Score.pdf
//archivo de donde sacaremos la melod√≠a que haremos en este ejercicio

/*
  Melodia 
 
 circuito:
 * bocina de 8-ohm en el pin digital 8

 */
 #include "pitches.h"    //incorpora los algoritmos contenidos en el TAB pitches.h
 

// a continuacion pondremos las notas de la melodia 
int melody[] = {
  NOTE_D4, NOTE_A4,NOTE_F4, NOTE_D4, NOTE_CS4, NOTE_D4, NOTE_E4, NOTE_F4 };

// lo que sigue son las duraciones de las notas: 4 = cuarto, 8 = octavo, etc.:
int noteDurations[] = {
  2, 2, 2, 2, 2,4,4,2};

void setup() {
  // se generara la instruccion iterativa que permite que se toquen las diversas notas
  for (int thisNote = 0; thisNote < 8; thisNote++) {

    // para calcular la duracion de cada nota, establecer la medida de noteDuration (por default viene en 1000ms, lo que equivale a que la redonda dura un segundo) 
    int noteDuration = 1000/noteDurations[thisNote]; //aqui es donde se establece el pulso
    tone(8, melody[thisNote],noteDuration); //aqui se asigna el pin digital 8 y se dice que sera la melodia y las duraciones establecidas en las variables las que seran sonadas.

    int pauseBetweenNotes = noteDuration * 1.30;  // aqui se establece el tiempo que queda entre nota y nota. Para un sonido marcado, dejar como esta; para un sonido legato, bajar la pausa inter-notas
    delay(pauseBetweenNotes); //complemento de instruccion anterior. 
    noTone(8); //esto es para que Arduino se calle una vez que termine su melodia
  }
}

void loop() {
  // aqui se podria establecer un loop, pero de momento no queremos hacerlo.
}
------------------------
LO QUE SIGUE DEBE PEGARSE EN UN TAB NUEVO

pitches.h


#define NOTE_B0  31
#define NOTE_C1  33
#define NOTE_CS1 35
#define NOTE_D1  37
#define NOTE_DS1 39
#define NOTE_E1  41
#define NOTE_F1  44
#define NOTE_FS1 46
#define NOTE_G1  49
#define NOTE_GS1 52
#define NOTE_A1  55
#define NOTE_AS1 58
#define NOTE_B1  62
#define NOTE_C2  65
#define NOTE_CS2 69
#define NOTE_D2  73
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 93
#define NOTE_G2  98
#define NOTE_GS2 104
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  123
#define NOTE_C3  131
#define NOTE_CS3 139
#define NOTE_D3  147
#define NOTE_DS3 156
#define NOTE_E3  165
#define NOTE_F3  175
#define NOTE_FS3 185
#define NOTE_G3  196
#define NOTE_GS3 208
#define NOTE_A3  220
#define NOTE_AS3 233
#define NOTE_B3  247
#define NOTE_C4  262
#define NOTE_CS4 277
#define NOTE_D4  294
#define NOTE_DS4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_GS4 415
#define NOTE_A4  440
#define NOTE_AS4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976
#define NOTE_C7  2093
#define NOTE_CS7 2217
#define NOTE_D7  2349
#define NOTE_DS7 2489
#define NOTE_E7  2637
#define NOTE_F7  2794
#define NOTE_FS7 2960
#define NOTE_G7  3136
#define NOTE_GS7 3322
#define NOTE_A7  3520
#define NOTE_AS7 3729
#define NOTE_B7  3951
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978








void loop() {
  // no need to repeat the melody.
}
